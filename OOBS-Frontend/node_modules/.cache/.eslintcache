[{"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\index.js":"1","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\App.js":"2","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\reportWebVitals.js":"3","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\CustomerProfile.js":"4","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Login.js":"5","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\ChangePassword.js":"6","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Transfer.js":"7","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\DashboardAdmin.js":"8","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\TransactionHistory.js":"9","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\TransactionHistoryEmp.js":"10","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\MyProfile.js":"11","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Registration.js":"12","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Dashboard.js":"13","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\configurations.js":"14"},{"size":566,"mtime":1657438825537,"results":"15","hashOfConfig":"16"},{"size":1570,"mtime":1657438825528,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1657438825538,"results":"18","hashOfConfig":"16"},{"size":3073,"mtime":1657709621059,"results":"19","hashOfConfig":"16"},{"size":3548,"mtime":1658067805382,"results":"20","hashOfConfig":"16"},{"size":3234,"mtime":1657438825528,"results":"21","hashOfConfig":"16"},{"size":3725,"mtime":1657439584065,"results":"22","hashOfConfig":"16"},{"size":1716,"mtime":1657535222182,"results":"23","hashOfConfig":"16"},{"size":3701,"mtime":1658067861600,"results":"24","hashOfConfig":"16"},{"size":3900,"mtime":1658126526032,"results":"25","hashOfConfig":"16"},{"size":2808,"mtime":1657438825530,"results":"26","hashOfConfig":"16"},{"size":9082,"mtime":1658049967511,"results":"27","hashOfConfig":"16"},{"size":1867,"mtime":1657438825529,"results":"28","hashOfConfig":"16"},{"size":62,"mtime":1657438825536,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7w9v11",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\index.js",[],["62","63"],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\App.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\reportWebVitals.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\CustomerProfile.js",["64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport { baseUrl } from \"./configurations\";\r\n\r\nfunction CustomerProfile(props) {\r\n  const [data, setData] = useState([]);\r\n  const [empId, setEmpId] = useState(\"\");\r\n  const apiUrl = `${baseUrl}ListRegistration`;\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    const data = {\r\n      EmailId: \"\",\r\n      Type: \"Admin\",\r\n    };\r\n    axios.post(apiUrl, data).then((result) => {\r\n      debugger;\r\n      if (result && result.data && result.data.listRegistration != undefined) {\r\n        setData(result.data.listRegistration);\r\n      } else {\r\n        alert(\"No data available.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n \r\n \r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <DashboardAdmin />\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fa fa-align-justify\"></i> <h3> Employee Details</h3>              \r\n            </CardHeader>\r\n            <CardBody>\r\n              {\r\n                data && data.length > 0 ?                \r\n              <Table hover bordered striped responsive size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                  <th>Employee ID</th>\r\n                    <th>Employee Name</th>\r\n                    <th>AadharNo</th>\r\n                    <th>PanCard</th>\r\n                    <th>Gender</th>\r\n                    <th>DOB</th>\r\n                    <th>AccountType</th>\r\n                    <th>PhoneNo</th>\r\n                    <th>EmailID</th>\r\n                    <th>Address</th>\r\n                    <th>InitialAmount</th>\r\n                    <th>Balance</th>\r\n                    <th>Password</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data &&\r\n                    data.length > 0 &&\r\n                    data.map((item, idx) => {\r\n                      return (\r\n                        <tr key={idx}>\r\n                          <td>{item.EmpID}</td>\r\n                          <td>{item.EmpName}</td>\r\n                          <td>{item.AadharNo}</td>\r\n                          <td>{item.PanCard}</td>\r\n                          <td>{item.Gender}</td>\r\n                          <td>{item.DOB}</td>\r\n                          <td>{item.AccountType}</td>\r\n                          <td>{item.PhoneNo}</td>\r\n                          <td>{item.EmailID}</td>\r\n                          <td>{item.Address}</td>\r\n                          <td>{item.InitialAmount}</td>\r\n                          <td>{item.InitialAmount}</td>\r\n                          <td>{item.Password}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n              : \r\n              <h4>Loading</h4>\r\n            }\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerProfile;\r\n","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Login.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\ChangePassword.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Transfer.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\DashboardAdmin.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\TransactionHistory.js",["68","69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\r\nimport DashboardAdmin from \"./DashboardAdmin\";\r\nimport { baseUrl } from \"./configurations\";\r\n\r\nfunction TransactionHistory(props) {\r\n  const [data, setData] = useState([]);\r\n  const [fromDate,setFromDate] = useState(null);\r\n  const [toDate,setToDate] = useState(null);\r\n\r\n\r\n  const apiUrl = `${baseUrl}TransactionHistory`;\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n   \r\n    const data = {\r\n      FromAccount: \"\",\r\n      Type: \"Admin\",\r\n      FromDate: \"fromDate\",\r\n      ToDate: \"toDate\"\r\n    };\r\n    axios.post(apiUrl, data).then((result) => {\r\n      debugger;\r\n      if (result && result.data && result.data.listTransactionHistory != undefined) {\r\n        setData(result.data.listTransactionHistory);\r\n      } else {\r\n        alert(\"No data available.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    const data = {\r\n      FromAccount: \"\",\r\n      Type: \"Admin\",\r\n      FromDate: fromDate,\r\n      ToDate: toDate\r\n    };\r\n    axios.post(apiUrl, data).then((result) => {\r\n      debugger;\r\n      if (result && result.data && result.data.listTransactionHistory != undefined) {\r\n        if(result.data.listTransactionHistory.length > 0)\r\n        setData(result.data.listTransactionHistory);\r\n        else\r\n        {\r\n          setData([])\r\n          alert(\"No data available.\");\r\n        }\r\n      } else {\r\n        alert(\"No data available.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <DashboardAdmin />\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fa fa-align-justify\"></i> <h3> Transaction History</h3>\r\n              <br></br>\r\n              <input\r\n                type=\"date\"\r\n                placeholder=\"Date From\"\r\n                onChange={(e) => setFromDate(e.target.value)}\r\n                value={fromDate}\r\n              />\r\n              &nbsp;&nbsp;&nbsp;\r\n              <input\r\n                type=\"date\"\r\n                placeholder=\"Date To\"\r\n                onChange={(e) => setToDate(e.target.value)}\r\n                value={toDate}\r\n                \r\n              />\r\n              &nbsp;&nbsp;&nbsp;\r\n              <button className=\"btn btn-primary mb-1\" onClick={() => handleSearch()}>Search</button>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {\r\n                data && data.length > 0 ?                \r\n              <Table hover bordered striped responsive size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Transaction From Account</th>\r\n                    <th>Transaction To Account</th>\r\n                    <th>Transaction Amount</th>\r\n                    <th>Transaction Date</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data &&\r\n                    data.length > 0 &&\r\n                    data.map((item, idx) => {\r\n                      return (\r\n                        <tr key={idx}>\r\n                          <td>{item.FromAccount}</td>\r\n                          <td>{item.ToAccount}</td>\r\n                          <td>{item.Amount}</td>\r\n                          <td>{item.TransactionDate}</td>                          \r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n              : \r\n              <h4>Loading / No Data Available</h4>\r\n            }\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\TransactionHistoryEmp.js",["71","72","73"],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\MyProfile.js",["74","75","76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { baseUrl } from \"./configurations\";\r\n\r\nfunction MyProfile(props) {\r\n  const [data, setData] = useState([]);\r\n  const apiUrl = `${baseUrl}ListRegistration`;\r\n  const[empId, setEmpId] = useState('');\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    const data = {\r\n        EmailId: localStorage.getItem(\"loggedUser\"),\r\n        Type: 'Employee',\r\n    };\r\n    axios.post(apiUrl, data).then((result) => {\r\n        debugger\r\n      if (result && result.data && result.data.listRegistration != undefined) {\r\n        setData(result.data.listRegistration);\r\n      } else {\r\n        alert(\"No data available.\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Dashboard />\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fa fa-align-justify\"></i> <h3> My Details</h3>\r\n              <br></br>              \r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table hover bordered striped responsive size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Employee ID</th>\r\n                    <th>Employee Name</th>\r\n                    <th>AadharNo</th>\r\n                    <th>PanCard</th>\r\n                    <th>Gender</th>\r\n                    <th>DOB</th>\r\n                    <th>AccountType</th>\r\n                    <th>PhoneNo</th>\r\n                    <th>EmailID</th>\r\n                    <th>Address</th>                    \r\n                    <th>Password</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data &&\r\n                    data.length > 0 &&\r\n                    data.map((item, idx) => {\r\n                      return (\r\n                        <tr key={idx}>\r\n                          <td>{item.EmpID}</td>\r\n                          <td>{item.EmpName}</td>\r\n                          <td>{item.AadharNo}</td>\r\n                          <td>{item.PanCard}</td>\r\n                          <td>{item.Gender}</td>\r\n                          <td>{item.DOB}</td>\r\n                          <td>{item.AccountType}</td>\r\n                          <td>{item.PhoneNo}</td>\r\n                          <td>{item.EmailID}</td>\r\n                          <td>{item.Address}</td>                          \r\n                          <td>{item.Password}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Registration.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\Dashboard.js",[],"E:\\MFPE\\Online Organization Banking System\\OOBS-Frontend\\src\\components\\configurations.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":9,"column":17,"nodeType":"84","messageId":"85","endLine":9,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":20,"column":65,"nodeType":"89","messageId":"90","endLine":20,"endColumn":67},{"ruleId":"91","severity":1,"message":"92","line":26,"column":6,"nodeType":"93","endLine":26,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":26,"column":71,"nodeType":"89","messageId":"90","endLine":26,"endColumn":73},{"ruleId":"91","severity":1,"message":"92","line":32,"column":6,"nodeType":"93","endLine":32,"endColumn":8,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"88","line":43,"column":71,"nodeType":"89","messageId":"90","endLine":43,"endColumn":73},{"ruleId":"87","severity":1,"message":"88","line":26,"column":71,"nodeType":"89","messageId":"90","endLine":26,"endColumn":73},{"ruleId":"91","severity":1,"message":"92","line":32,"column":6,"nodeType":"93","endLine":32,"endColumn":8,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"88","line":43,"column":71,"nodeType":"89","messageId":"90","endLine":43,"endColumn":73},{"ruleId":"82","severity":1,"message":"83","line":10,"column":9,"nodeType":"84","messageId":"85","endLine":10,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":10,"column":16,"nodeType":"84","messageId":"85","endLine":10,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":20,"column":65,"nodeType":"89","messageId":"90","endLine":20,"endColumn":67},{"ruleId":"91","severity":1,"message":"92","line":26,"column":6,"nodeType":"93","endLine":26,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'empId' is assigned a value but never used.","Identifier","unusedVar","'setEmpId' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiUrl'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"104","fix":"107"},{"desc":"104","fix":"108"},"Update the dependencies array to be: [apiUrl]",{"range":"109","text":"110"},{"range":"111","text":"110"},{"range":"112","text":"110"},{"range":"113","text":"110"},[798,800],"[apiUrl]",[934,936],[957,959],[820,822]]